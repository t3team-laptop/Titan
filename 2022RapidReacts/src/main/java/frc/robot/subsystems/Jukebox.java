//Daniel Marquez wuz here *rock hands*
//Jorge was also here *Mexican music plays*
//Derived from Team 303's code.

package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.SubsystemBase;
import com.ctre.phoenix.music.Orchestra;
import com.ctre.phoenix.motorcontrol.can.TalonFX;
import java.util.ArrayList;
import java.util.Random;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

public class Jukebox extends SubsystemBase {
    Orchestra orchestra; //Orchestra class
    Random r = new Random();
    TalonFX[] motors = {new TalonFX(1), new TalonFX(2), new TalonFX(3), new TalonFX(4)}; //Add the motorIDs that will play the song
    String[] songs = {"RickRoll.chrp","10kSurfGang.chrp","cucaracha.chrp","HereComesTheSun-TheBeatles.chrp","ImperialMarch.chrp","Megalovania.chrp","PumpedUp.chrp","rideOfValyries.chrp","SmoothCriminal.chrp","Wii-Song.chrp"};
    String songToPlay = songs[r.nextInt(songs.length-1)]; //Load any song filename found in src\main\deploy - .chrp files generated by phoenix tuner

    //Initialize method called by RobotContainer
    public void startJukebox() {
        songToPlay = songs[r.nextInt(songs.length-1)]; //Load any song filename found in src\main\deploy - .chrp files generated by phoenix tuner
        ArrayList<TalonFX> instruments = new ArrayList<TalonFX>(); //Create Arraylist of instruments to pass to orchestra
        //Add each motor to the list - technically you could skip this whole step but shush
        for(TalonFX motor : motors) {
            instruments.add(motor);
        }
        try{
            orchestra.stop();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        orchestra = new Orchestra(instruments); //Define Orchestra with motorIDs
        orchestra.loadMusic(songToPlay); //Load specified song filename
        SmartDashboard.putBoolean("Play Music?", true); //Create variable that can be changed at runtime by FRC Driver Station
        
    }

    @Override
    public void periodic() {
        //Check status of driver station variable, return false if no variable found
        boolean playMusic = SmartDashboard.getBoolean("Play Music?", false);

        //Play or Stop music depending on variable status
        if(playMusic) {
            //orchestra.play();
        }
        else {
            orchestra.stop();
        }
    }

}
